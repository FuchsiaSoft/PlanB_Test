@using PlanB.Models.Forms.Common;
@using System.Web;
@using System.Reflection;
@using PlanB.Models.Forms.Common.ControlAttributes;
@model FormViewModel


@{
    ViewBag.Title = Model.Form.FriendlyName;
    ViewBag.ErrorMessage = "Ooops, something went wrong.";
    if (!string.IsNullOrWhiteSpace(Model.Form.GetCurrentPage().Header))
    {
        ViewBag.Message = Model.Form.GetCurrentPage().Header;

    }
}

<div class="col-md-8">
    <h1>@ViewBag.Title</h1>
    <p>@ViewBag.Message</p>
    <br />

    @if (!string.IsNullOrWhiteSpace(Model.Form.GetCurrentPage().Content))
    {
        @Html.Raw(HttpUtility.HtmlDecode(Model.Form.GetCurrentPage().Content))

    }

    @using (Html.BeginForm("Do", "Forms", FormMethod.Post))
    {
        @Html.HiddenFor(Model => Model.InstanceId);

        IEnumerable<PropertyInfo> properties = Model.Form.GetCurrentPage().GetType().GetProperties()
        .Where(p => p.GetCustomAttributes()
        .Any(a => a.GetType().BaseType == typeof(BaseControlAttribute)));

        foreach (var propInfo in properties)
        {
            var attribute = propInfo.GetCustomAttributes()
                .First(a => a.GetType().BaseType == typeof(BaseControlAttribute));

            if (attribute is TextBoxControlAttribute)
            {
                var textAttribute = (TextBoxControlAttribute)attribute;

                <div class="form-group">
                    <span class="form-label">@textAttribute.Question</span>
                    <span class="form-hint">@Html.Raw(HttpUtility.HtmlDecode(textAttribute.HelpText))</span>
                    <div class="form-hint">@ViewBag.DirectorateHelpText</div>
                    <span class="error-message" style = "display:none">This Field can not be blank</span>
                    <input class="form-control" type="text" name="@propInfo.Name" />
                </div>
            }
        }
        <br />
        @Html.Partial("~/Views/Shared/_FormButtonNextPartialView.cshtml")
    }
</div>








